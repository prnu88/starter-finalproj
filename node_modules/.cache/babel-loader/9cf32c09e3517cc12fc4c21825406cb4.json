{"ast":null,"code":"var _jsxFileName = \"C:\\\\udacityfinalproject\\\\nd0191-c1-myreads\\\\starter-finalproj\\\\src\\\\components\\\\BookShelf.js\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book.js\";\nimport BooksGrid from \"./BooksGrid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  shelfName,\n  allBooks,\n  addNewBook,\n  updateBook\n}) => {\n  const filterBook = shelf => {\n    allBooks.filter(book => book.shelf === shelf);\n  };\n\n  const renderShelfName = shelfName => {\n    if (shelfName === 'currentlyReading') {\n      return 'Currently Reading';\n    } else if (shelfName === 'wantToRead') {\n      return 'Want to Read';\n    } else if (shelfName === 'read') {\n      return 'Read';\n    }\n  };\n\n  const shelfBooks = allBooks.filter(book => book.shelf === shelfName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: renderShelfName(shelfName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(BooksGrid, {\n          shelfBooks: shelfBooks,\n          updateBooks: updateBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_c = BookShelf;\nBookShelf.propTypes = {\n  shelfName: PropTypes.string.isRequired,\n  allBooks: PropTypes.array.isRequired\n};\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["C:/udacityfinalproject/nd0191-c1-myreads/starter-finalproj/src/components/BookShelf.js"],"names":["PropTypes","Book","BooksGrid","BookShelf","shelfName","allBooks","addNewBook","updateBook","filterBook","shelf","filter","book","renderShelfName","shelfBooks","updateBooks","propTypes","string","isRequired","array"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA,QAAX;AAAoBC,EAAAA,UAApB;AAA+BC,EAAAA;AAA/B,CAAD,KAA+C;AAC/D,QAAMC,UAAU,GAAIC,KAAD,IAAU;AAC3BJ,IAAAA,QAAQ,CAACK,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACF,KAAL,KAAeA,KAAzC;AACD,GAFD;;AAIA,QAAMG,eAAe,GAAIR,SAAD,IAAc;AACnC,QAAGA,SAAS,KAAK,kBAAjB,EAAoC;AACjC,aAAO,mBAAP;AACF,KAFD,MAGK,IAAGA,SAAS,KAAK,YAAjB,EAA8B;AAClC,aAAO,cAAP;AACA,KAFI,MAGA,IAAGA,SAAS,KAAK,MAAjB,EAAwB;AAC5B,aAAO,MAAP;AACA;AACH,GAVD;;AAYA,QAAMS,UAAU,GAAGR,QAAQ,CAACK,MAAT,CAAiBC,IAAD,IAC/BA,IAAI,CAACF,KAAL,KAAeL,SADA,CAAnB;AAGE,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCQ,eAAe,CAACR,SAAD;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,UAAU,EAAES,UAAvB;AAAmC,UAAA,WAAW,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CA9BD;;KAAMX,S;AAgCNA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UADR;AAEpBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,KAAV,CAAgBD;AAFN,CAAtB;AAKA,eAAed,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport Book from \"./Book.js\";\r\nimport BooksGrid from \"./BooksGrid.js\";\r\n\r\n\r\nconst BookShelf = ({shelfName,allBooks,addNewBook,updateBook}) =>{\r\n  const filterBook = (shelf) =>{\r\n    allBooks.filter((book) => book.shelf === shelf);\r\n  };\r\n\r\n  const renderShelfName = (shelfName) =>{\r\n     if(shelfName === 'currentlyReading'){\r\n        return 'Currently Reading';\r\n     }\r\n     else if(shelfName === 'wantToRead'){\r\n      return 'Want to Read';\r\n     } \r\n     else if(shelfName === 'read'){\r\n      return 'Read';\r\n     }\r\n  };\r\n\r\n  const shelfBooks = allBooks.filter((book) =>\r\n      book.shelf === shelfName);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{renderShelfName(shelfName)}</h2>\r\n          <div className=\"bookshelf-books\"> \r\n            <BooksGrid shelfBooks={shelfBooks} updateBooks={updateBooks}></BooksGrid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nBookShelf.propTypes = {\r\n  shelfName: PropTypes.string.isRequired,\r\n  allBooks: PropTypes.array.isRequired\r\n};\r\n\r\nexport default BookShelf;"]},"metadata":{},"sourceType":"module"}
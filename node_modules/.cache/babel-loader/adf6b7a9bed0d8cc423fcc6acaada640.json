{"ast":null,"code":"var _jsxFileName = \"C:\\\\udacityfinalproject\\\\nd0191-c1-myreads\\\\starter-finalproj\\\\src\\\\components\\\\SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport BooksGrid from \"./BooksGrid\";\nimport \"../css/App.css\";\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  addOrUpdateBook\n}) => {\n  _s();\n\n  const [searchMatchBook, setSearchMatchBook] = useState([]);\n\n  const searchBook = async input => {\n    let query = input;\n\n    if (input !== \"\") {\n      const res = await BooksAPI.search(query, 20);\n\n      if (res !== null && res.error !== 'empty query') {\n        setSearchMatchBook(res);\n      }\n    }\n  };\n\n  const returnToHomePage = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-search\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close-search\",\n          onClick: () => returnToHomePage(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: event => searchBook(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BooksGrid, {\n        shelfBooks: searchMatchBook,\n        addOrUpdateBook: addOrUpdateBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n};\n\n_s(SearchBooks, \"AQC419UvvLwc40lTVk+rU/u4XgA=\");\n\n_c = SearchBooks;\nSearchBooks.propTypes = {\n  addOrUpdateBook: PropTypes.func.isRequired,\n  updatePageState: PropTypes.func.isRequired\n};\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["C:/udacityfinalproject/nd0191-c1-myreads/starter-finalproj/src/components/SearchBooks.js"],"names":["useState","BooksGrid","BooksAPI","PropTypes","SearchBooks","addOrUpdateBook","searchMatchBook","setSearchMatchBook","searchBook","input","query","res","search","error","returnToHomePage","event","target","value","propTypes","func","isRequired","updatePageState"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAsB;AAAA;;AACxC,QAAK,CAACC,eAAD,EAAiBC,kBAAjB,IAAuCP,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMQ,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAC5B,QAAIC,KAAK,GAAGD,KAAZ;;AACA,QAAGA,KAAK,KAAK,EAAb,EAAgB;AACd,YAAME,GAAG,GAAI,MAAMT,QAAQ,CAACU,MAAT,CAAgBF,KAAhB,EAAsB,EAAtB,CAAnB;;AACA,UAAGC,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACE,KAAJ,KAAc,aAAjC,EAA+C;AAC7CN,QAAAA,kBAAkB,CAACI,GAAD,CAAlB;AACD;AACF;AACR,GARD;;AAUA,QAAMG,gBAAgB,GAAG,MAAK,CAE7B,CAFD;;AAIE,sBACD;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACM;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,OAAO,EAAE,MAAKA,gBAAgB,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kCAFd;AAGE,UAAA,QAAQ,EAAGC,KAAD,IAAWP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAeC;AAAA,6BACA,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEX,eAAvB;AAAwC,QAAA,eAAe,EAAED;AAAzD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAoBH,CArCD;;GAAMD,W;;KAAAA,W;AAuCNA,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,eAAe,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADV;AAEtBC,EAAAA,eAAe,EAAElB,SAAS,CAACgB,IAAV,CAAeC;AAFV,CAAxB;AAKA,eAAehB,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport BooksGrid from \"./BooksGrid\";\r\nimport \"../css/App.css\";\r\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBooks = ({addOrUpdateBook}) =>{\r\n  const[searchMatchBook,setSearchMatchBook] = useState([]);\r\n\r\n  const searchBook = async (input) => {\r\n          let query = input;\r\n          if(input !== \"\"){\r\n            const res =  await BooksAPI.search(query,20);   \r\n            if(res !== null && res.error !== 'empty query'){\r\n              setSearchMatchBook(res);\r\n            }  \r\n          }\r\n  };\r\n\r\n  const returnToHomePage = () =>{\r\n   \r\n  };\r\n\r\n    return (\r\n   <div className=\"search-books\">\r\n    <div className=\"search-books-bar\">\r\n      <div className=\"close-search\">\r\n            <div className=\"close-search\" onClick={() =>returnToHomePage()}>\r\n              Close\r\n            </div>\r\n      </div>\r\n      <div className=\"search-books-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title, author, or ISBN\"\r\n          onChange={(event) => searchBook(event.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n    <div>\r\n    <BooksGrid shelfBooks={searchMatchBook} addOrUpdateBook={addOrUpdateBook}></BooksGrid>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nSearchBooks.propTypes = {\r\n  addOrUpdateBook: PropTypes.func.isRequired,\r\n  updatePageState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\udacityfinalproject\\\\nd0191-c1-myreads\\\\starter-finalproj\\\\src\\\\components\\\\ListBooksContent.js\";\nimport BookShelf from \"./BookShelf\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooksContent = ({\n  allBooks,\n  addOrUpdateBook,\n  updatePageState\n}) => {\n  let shelfName = ['currentlyReading', 'read', 'wantToRead']; //\"currentlyReading\",\"read\",\"wantToRead\"\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[0],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[1],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[2],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"search\",\n          onClick: () => updatePageState(\"search\"),\n          children: \" Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ListBooksContent;\nListBooksContent.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  addOrUpdateBook: PropTypes.func.isRequired,\n  updatePageState: PropTypes.func.isRequired\n};\nexport default ListBooksContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooksContent\");","map":{"version":3,"sources":["C:/udacityfinalproject/nd0191-c1-myreads/starter-finalproj/src/components/ListBooksContent.js"],"names":["BookShelf","PropTypes","ListBooksContent","allBooks","addOrUpdateBook","updatePageState","shelfName","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,eAAV;AAA0BC,EAAAA;AAA1B,CAAD,KAA+C;AACpE,MAAIC,SAAS,GAAG,CAAC,kBAAD,EAAoB,MAApB,EAA2B,YAA3B,CAAhB,CADoE,CACV;;AAE1D,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEH,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEE,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEH,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEE,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEH,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,QAAR;AAAiB,UAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,QAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CApBD;;KAAMH,gB;AAsBNA,gBAAgB,CAACK,SAAjB,GAA6B;AAC3BJ,EAAAA,QAAQ,EAAEF,SAAS,CAACO,KAAV,CAAgBC,UADC;AAE3BL,EAAAA,eAAe,EAAEH,SAAS,CAACS,IAAV,CAAeD,UAFL;AAG3BJ,EAAAA,eAAe,EAAEJ,SAAS,CAACS,IAAV,CAAeD;AAHL,CAA7B;AAMA,eAAeP,gBAAf","sourcesContent":["import BookShelf from \"./BookShelf\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListBooksContent = ({allBooks,addOrUpdateBook,updatePageState}) =>{\r\n    let shelfName = ['currentlyReading','read','wantToRead']; //\"currentlyReading\",\"read\",\"wantToRead\"\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div>\r\n            <BookShelf shelfName={shelfName[0]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n            <BookShelf shelfName={shelfName[1]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n            <BookShelf shelfName={shelfName[2]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a href=\"search\" onClick={() => updatePageState(\"search\")}> Add a book</a>        \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nListBooksContent.propTypes = {\r\n  allBooks: PropTypes.array.isRequired,\r\n  addOrUpdateBook: PropTypes.func.isRequired,\r\n  updatePageState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ListBooksContent;"]},"metadata":{},"sourceType":"module"}
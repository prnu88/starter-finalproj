{"ast":null,"code":"var _jsxFileName = \"C:\\\\udacityfinalproject\\\\nd0191-c1-myreads\\\\starter-finalproj\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/App.css\";\nimport { useEffect, useState } from \"react\";\nimport SearchBooks from \"./SearchBooks.js\";\nimport ListBooksContent from \"./ListBooksContent\";\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allBooks, setAllBooks] = useState([]);\n  const [showPage, setShowPage] = useState(\"list\");\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setAllBooks(res);\n    };\n\n    getAllBooks();\n  }, []);\n\n  const addOrUpdateBook = (bookIdVal, shelf) => {\n    allBooks.forEach(book => {\n      if (bookIdVal === book.id) {\n        book.shelf = shelf;\n      }\n    });\n    setAllBooks([...allBooks]);\n  };\n\n  const updatePageState = pageVal => {\n    setShowPage(pageVal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showPage === \"list\" && /*#__PURE__*/_jsxDEV(ListBooksContent, {\n      allBooks: allBooks,\n      addOrUpdateBook: addOrUpdateBook,\n      updatePageState: updatePageState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this), showPage === \"search\" && /*#__PURE__*/_jsxDEV(SearchBooks, {\n      addOrUpdateBook: addOrUpdateBook,\n      updatePageState: updatePageState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"faLaXN8ZhX1yNVyX7URQrxASS1M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/udacityfinalproject/nd0191-c1-myreads/starter-finalproj/src/components/App.js"],"names":["useEffect","useState","SearchBooks","ListBooksContent","BooksAPI","App","allBooks","setAllBooks","showPage","setShowPage","getAllBooks","res","getAll","addOrUpdateBook","bookIdVal","shelf","forEach","book","id","updatePageState","pageVal"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,MAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,WAAW,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,MAAT,EAAlB;AACAL,MAAAA,WAAW,CAACI,GAAD,CAAX;AACH,KAHD;;AAIAD,IAAAA,WAAW;AACd,GANQ,EAMP,EANO,CAAT;;AASA,QAAMG,eAAe,GAAG,CAACC,SAAD,EAAWC,KAAX,KAAoB;AACxCT,IAAAA,QAAQ,CAACU,OAAT,CAAkBC,IAAD,IAAS;AACxB,UAAGH,SAAS,KAAKG,IAAI,CAACC,EAAtB,EAAyB;AACrBD,QAAAA,IAAI,CAACF,KAAL,GAAaA,KAAb;AACH;AACF,KAJD;AAKAR,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACH,GAPD;;AASA,QAAMa,eAAe,GAAIC,OAAD,IAAY;AAClCX,IAAAA,WAAW,CAACW,OAAD,CAAX;AACD,GAFD;;AAKA,sBACE;AAAA,eAEMZ,QAAQ,KAAK,MAAb,iBAAuB,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEF,QAA5B;AAAsC,MAAA,eAAe,EAAEO,eAAvD;AAAwE,MAAA,eAAe,EAAEM;AAAzF;AAAA;AAAA;AAAA;AAAA,YAF7B,EAKMX,QAAQ,KAAK,QAAb,iBAAyB,QAAC,WAAD;AAAa,MAAA,eAAe,EAAEK,eAA9B;AAA+C,MAAA,eAAe,EAAEM;AAAhE;AAAA;AAAA;AAAA;AAAA,YAL/B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQd,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import \"../css/App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SearchBooks from \"./SearchBooks.js\";\r\nimport ListBooksContent from \"./ListBooksContent\";\r\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\r\n\r\nfunction App() {\r\n  const [allBooks,setAllBooks] = useState([]);\r\n  const [showPage,setShowPage] = useState(\"list\");\r\n\r\n  useEffect(() => {\r\n      const getAllBooks = async () => {\r\n          const res = await BooksAPI.getAll();     \r\n          setAllBooks(res);      \r\n      };\r\n      getAllBooks();\r\n  },[]);\r\n\r\n\r\n  const addOrUpdateBook = (bookIdVal,shelf) =>{\r\n      allBooks.forEach((book) =>{\r\n        if(bookIdVal === book.id){\r\n            book.shelf = shelf;\r\n        }\r\n      });\r\n      setAllBooks([...allBooks]);\r\n  };\r\n\r\n  const updatePageState = (pageVal) =>{\r\n    setShowPage(pageVal);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        {\r\n          showPage === \"list\" && <ListBooksContent allBooks={allBooks} addOrUpdateBook={addOrUpdateBook} updatePageState={updatePageState}/>\r\n        }\r\n        {\r\n          showPage === \"search\" && <SearchBooks addOrUpdateBook={addOrUpdateBook} updatePageState={updatePageState}/>\r\n        }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
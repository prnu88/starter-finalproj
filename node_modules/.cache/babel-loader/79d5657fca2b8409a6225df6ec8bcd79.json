{"ast":null,"code":"var _jsxFileName = \"C:\\\\udacityfinalproject\\\\nd0191-c1-myreads\\\\starter-finalproj\\\\src\\\\components\\\\ListBooksContent.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooksContent = ({\n  allBooks,\n  addOrUpdateBook,\n  updatePageState,\n  fetchAllBooks\n}) => {\n  _s();\n\n  let shelfName = ['currentlyReading', 'read', 'wantToRead']; //\"currentlyReading\",\"read\",\"wantToRead\"\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await BooksAPI.getAll();\n      fetchAllBooks(res);\n    };\n\n    getAllBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[0],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[1],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelfName: shelfName[2],\n          allBooks: allBooks,\n          addOrUpdateBook: addOrUpdateBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => updatePageState(\"search\"),\n          children: \" Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ListBooksContent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ListBooksContent;\nListBooksContent.propTypes = {\n  allBooks: PropTypes.array.isRequired\n};\nexport default ListBooksContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooksContent\");","map":{"version":3,"sources":["C:/udacityfinalproject/nd0191-c1-myreads/starter-finalproj/src/components/ListBooksContent.js"],"names":["Link","BookShelf","PropTypes","useEffect","useState","BooksAPI","ListBooksContent","allBooks","addOrUpdateBook","updatePageState","fetchAllBooks","shelfName","getAllBooks","res","getAll","propTypes","array","isRequired"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,eAAV;AAA0BC,EAAAA,eAA1B;AAA0CC,EAAAA;AAA1C,CAAD,KAA6D;AAAA;;AAClF,MAAIC,SAAS,GAAG,CAAC,kBAAD,EAAoB,MAApB,EAA2B,YAA3B,CAAhB,CADkF,CACxB;;AAE1DR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,WAAW,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,MAAT,EAAlB;AACAJ,MAAAA,aAAa,CAACG,GAAD,CAAb;AACH,KAHD;;AAIAD,IAAAA,WAAW;AACd,GANU,EAMT,EANS,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAED,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEJ,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEG,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEJ,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEG,SAAS,CAAC,CAAD,CAA/B;AAAoC,UAAA,QAAQ,EAAEJ,QAA9C;AAAwD,UAAA,eAAe,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eASE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CA5BD;;GAAMH,gB;;KAAAA,gB;AA8BNA,gBAAgB,CAACS,SAAjB,GAA6B;AAC3BR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,KAAV,CAAgBC;AADC,CAA7B;AAIA,eAAeX,gBAAf","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as BooksAPI from \"../utils/BooksAPI.js\";\r\n\r\nconst ListBooksContent = ({allBooks,addOrUpdateBook,updatePageState,fetchAllBooks}) =>{\r\n    let shelfName = ['currentlyReading','read','wantToRead']; //\"currentlyReading\",\"read\",\"wantToRead\"\r\n\r\n    useEffect(() => {\r\n      const getAllBooks = async () => {\r\n          const res = await BooksAPI.getAll();     \r\n          fetchAllBooks(res);      \r\n      };\r\n      getAllBooks();\r\n  },[]);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <div>\r\n            <BookShelf shelfName={shelfName[0]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n            <BookShelf shelfName={shelfName[1]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n            <BookShelf shelfName={shelfName[2]} allBooks={allBooks} addOrUpdateBook={addOrUpdateBook}></BookShelf>\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <a onClick={() => updatePageState(\"search\")}> Add a book</a>        \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nListBooksContent.propTypes = {\r\n  allBooks: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ListBooksContent;"]},"metadata":{},"sourceType":"module"}